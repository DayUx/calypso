name: Build Android
on:
  push:
    branches:
      - develop
      - master
  pull_request:
    branches:
      - develop
      - master
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          ref: develop

      - name: Get next version
        uses: reecetech/version-increment@2023.10.2
        id: version
        with:
          scheme: calver
          increment: patch

      - name: Print version
        run: echo "Version is ${{ steps.version.outputs.version }}"

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x

      - name: Check Node.js and npm versions
        run: |
          node -v
          npm -v

      - name: Setup Hub
        shell: bash
        run: sudo apt install hub

      - name: install dependencies
        run: npm install

      - name: Build angular app
        run: npm run build

      - name: Capacitor sync
        run: npx cap sync

      - name: Build app bundle for release
        if: "contains(github.ref, 'master') && github.event_name != 'pull_request'"
        run: cd android && ./gradlew bundle -PversionName=${{steps.version.outputs.version}} -PversionCode=${{ steps.version.outputs.major-version }}${{ steps.version.outputs.minor-version }}${{ steps.version.outputs.patch-version }} && ./gradlew assembleDebug -PversionName=${{steps.version.outputs.version}} -PversionCode=${{ steps.version.outputs.major-version }}${{ steps.version.outputs.minor-version }}${{ steps.version.outputs.patch-version }}
      - name: Build app bundle
        if: "!contains(github.ref, 'master')"
        run: cd android && ./gradlew bundle && ./gradlew assembleDebug

      - name: Extract Android signing key from env
        run: |
          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
          base64 -d android/release.jks.base64 > android/release.decrypted.jks

      - name: Sign dev build
        run: jarsigner -keystore android/release.decrypted.jks -storepass ${{ secrets.RELEASE_KEYSTORE_PASSWORD }} -signedjar ./android/app/build/outputs/bundle/release/app-release-signed.aab ./android/app/build/outputs/bundle/release/app-release.aab ${{ secrets.RELEASE_KEYSTORE_ALIAS }}
      - name: Check folder content of android output
        run: ls ./android/app/build/outputs/bundle/release

      - name: Upload release bundle
        uses: actions/upload-artifact@v4
        with:
          name: app-release
          path: ./android/app/build/outputs/bundle/release/app-release-signed.aab
          retention-days: 60

      - name: Build Release
        if: "contains(github.ref, 'master') && github.event_name != 'pull_request'"
        shell: bash
        run: |
          hub release create ${{ steps.version.outputs.version }} \
          -m ${{ steps.version.outputs.version }} \
          -a ./android/app/build/outputs/apk/debug/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Build pre-release
        if: "contains(github.ref, 'develop') && github.event_name != 'pull_request'"
        shell: bash
        run: |
          hub release create ${{ steps.version.outputs.version }} \
          -m ${{ steps.version.outputs.version }} \
          -a ./android/app/build/outputs/apk/debug/app-debug.apk \
          -p
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
