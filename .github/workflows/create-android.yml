name: Build Android
on: [push]
jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest
    # TODO: add the default directory - COMMENT IF IT'S NOT IN SUBFOLDER
    # defaults:
    #   run:
    #     working-directory: ./frontend
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        # TODO: add your branch to checkout
        with:
          ref: develop
      - name: Version
        id: version
        uses: juliansangillo/tag-version@v1
        with:
          production-branch: master
          dev-branch: develop
      - name : Print version
        run: echo "Version is ${{ steps.version.outputs.revision }}"

      - name: Setup java
        uses: actions/setup-java@v3
        with:
          distribution: "zulu"
          java-version: "17"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
      - name: Setup Hub
        shell: bash
        run: sudo apt install hub
      - name: install dependencies
        run: npm install

      - name: Build angular app
        run: npm run build

#      - name: Add android folder if not present
#        run: if [ ! -d "./android" ]; then npx cap add android; fi

      - name: Capacitor sync
        run: npx cap sync

#      - name: Capacitor copy
#        run: npx cap copy


      # TODO: Check for folder structure in README for generating splash screen
#      - name: Generate icons and splash screen to android folder
#        run:  if [ -d "./resources" ]; then npm install @capacitor/assets --save-dev && npx capacitor-assets generate --android; fi

      - name: Build app bundle
        run: cd android && ./gradlew bundle && ./gradlew assembleDebug

#      - name: Extract Android signing key from env
#        run: |
#          echo "${{ secrets.RELEASE_KEYSTORE }}" > android/release.jks.base64
#          base64 -d android/release.jks.base64 > android/release.decrypted.jks
#
#      - name: Sign dev build
#        run: jarsigner -keystore android/release.decrypted.jks -storepass "${{ secrets.RELEASE_KEYSTORE_PASSWORD }}" -signedjar ./android/app/build/outputs/bundle/release/app-release-signed.aab ./android/app/build/outputs/bundle/release/app-release.aab release

      - name: Check folder content of android output
        run: ls ./android/app/build/outputs/bundle/release

      # - name: Upload release bundle
      #   uses: actions/upload-artifact@v3
      #   with:
      #     name: app-release
      #     path: ./android/app/build/outputs/bundle/release/app-release-signed.aab
      #     retention-days: 60


      - name: Build Release
        if: "contains(github.ref, 'master')"
        shell: bash
        run: |
          hub release create ${{ steps.version.outputs.revision }} \
          -m ${{ steps.version.outputs.revision }} \
          -a ./android/app/build/outputs/apk/debug/app-debug.apk
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}

      - name: Build pre-release
        if: "contains(github.ref, 'develop')"
        shell: bash
        run: |
          hub release create ${{ steps.version.outputs.revision }} \
          -m ${{ steps.version.outputs.revision }} \
          -a ./android/app/build/outputs/apk/debug/app-debug.apk \
          -p
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}
